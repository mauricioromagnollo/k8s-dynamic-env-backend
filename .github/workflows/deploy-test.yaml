name: Build and push the build to test

on:
  push:
    branches-ignore:
      - 'main'
      - 'master'

env:
  IMAGE_NAME: ship-manager

jobs:
  build_push_image:
    runs-on: ubuntu-20.04

  steps:
    - uses: actions/checkout@v2

    - name: Set env
      id: tags
      run: echo tag=${GITHUB_REF#refs/tags/} >> $GITHUB_ENV

    - name: Setup buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to ACR
      uses: docker/login-action@v1
      with:
        username: ${{secrets.ACR_LOGIN}}
        password: ${{secrets.ACR_PASSWORD}}
        registry: ${{secrets.ACR_NAME}}

    - name: Build backend image
      uses: docker/build-push-action@v2
      with:
        tags: ${{secrets.ACR_NAME}}/${{env.IMAGE_NAME}}:${{env.tag}}
        labels: |
          image.revision=${{github.sha}}
        file: backend/Dockerfile
        context: backend
        push: true

  deploy:
    runs-on: ubuntu-20.04
    needs: build_push_image

    steps:
      - uses: actions/checkout@v2

      - name: Set env
        id: tags
        run: echo tag=${GITHUB_REF#refs/tags/} >> $GITHUB_ENV

      - name: Get AKS Credentials
        uses: Azure/login@v1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}

      - uses: Azure/aks-set-context@v2
        with:
          resource-group: ${{secrets.AZURE_RESOURCE_GROUP}}
          cluster-name: ${{secrets.AZURE_CLUSTER_NAME}}

      - name: Install Helm
        uses: Azure/setup-helm@v1
        with:
          version: v3.3.1

      - name: Run Deploy
        run: |
          helm upgrade ship-manager-${{env.tag}} \
            ./kubernetes/ship-manager \
            --install \
            --namespace test-${{env.tag}} \
            --create-namespace \
            --set registryName=${{secrets.ACR_NAME}} \
            --set ingress.hostname=ship-manager-${{env.tag}} \
            --set dnsZone=${{secrets.DNS_NAME}} \
            --set imageTag=${{env.tag}}
